{
  "GenerateFeatureFile": {
    "SystemInstruction": "You are a SpecFlow feature file generator.\r\nYour task is to output only a SpecFlow feature file in JSON format with keys: \"FeatureFiles\" (Dictionary where the key is the SpecFlow feature file name). Make sure to output valid JSON, inside a string field you should only use single quotes, the double quotes are for begin/end of the field only. Make sure that the output can be read by JsonSerializer in C#. If the string contains tab, new line, or other invalid characters in JSON, use escape sequence.",
    "Instructions": [
      "The input will be either a ReqIF file or a list of requirements.",
      "Carefully read and understand the provided requirements before generating the feature file.",
      "Ensure the output follows proper SpecFlow naming conventions, formatting rules, and best SpecFlow practices.",
      "Scenario names should clearly reflect the requirements provided.",
      "Do not provide any explanations, descriptions, or additional textâ€”only return the formatted SpecFlow feature file as a string."
    ],
    "Thinking": "Think before you write the feature file. Analyze the requirements by piecing together the requirements to craft a SpecFlow feature file. This involves generating test data to reflect various outcomes, ensuring a thorough and effective coverage of scenarios.",
    "Example": "Here is an example of input in ReqIF format and expected output as SpecFlow feature file:\r\n\t\u003CInput\u003E\r\n\u003C?xml version=\u00271.0\u0027 encoding=\u0027UTF-8\u0027?\u003E\r\n\u003CREQ-IF\u003E\r\n\t\u003CREQ-IF-HEADER\u003E\r\n\t\t\u003CTITLE\u003ETraffic Light and Pedestrian Light System Requirements\u003C/TITLE\u003E\r\n\t\t\u003CCREATOR\u003EGenerated by ChatGPT\u003C/CREATOR\u003E\r\n\t\t\u003CCREATION-TIME\u003E2024-09-26T00:00:00Z\u003C/CREATION-TIME\u003E\r\n\t\u003C/REQ-IF-HEADER\u003E\r\n\t\u003CSPECIFICATIONS\u003E\r\n\t\t\u003CSPECIFICATION ID=\u0022REQ-SPEC-001\u0022 LONG-NAME=\u0022Traffic and Pedestrian Light Requirements\u0022 /\u003E\r\n\t\u003C/SPECIFICATIONS\u003E\r\n\t\u003CSPEC-OBJECTS\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-001\u0022 LONG-NAME=\u0022Requirement 1\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EThe traffic light system should start in the TrafficRed state.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022state\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003ETrafficRed\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-002\u0022 LONG-NAME=\u0022Requirement 2\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EThe traffic light should stay red for a duration equal to or greater than ClearIntersectionTime seconds.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022state\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003ETrafficRed\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022condition\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003E[t_seconds \u0026gt; ClearIntersectionTime]\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-003\u0022 LONG-NAME=\u0022Requirement 3\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EAfter the red light duration, the light transitions to TrafficGreen.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022state\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003ETrafficGreen\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022condition\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003ESetTrafficLightGreen()\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-004\u0022 LONG-NAME=\u0022Requirement 4\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EThe traffic light should stay green for a duration equal to or greater than LightGreenTime seconds.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022state\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003ETrafficGreen\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022condition\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003E[t_seconds \u0026gt; LightGreenTime]\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-005\u0022 LONG-NAME=\u0022Requirement 5\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EAfter the green light duration, the light transitions to TrafficYellow.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022state\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003ETrafficYellow\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022condition\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003ESetTrafficLightYellow()\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-006\u0022 LONG-NAME=\u0022Requirement 6\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EThe traffic light should stay yellow for a duration equal to or greater than LightYellowTime seconds.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022state\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003ETrafficYellow\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022condition\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003E[t_seconds \u0026gt; LightYellowTime]\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-007\u0022 LONG-NAME=\u0022Requirement 7\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EAfter the yellow light duration, the light transitions back to TrafficRed.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022state\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003ETrafficRed\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-008\u0022 LONG-NAME=\u0022Requirement 8\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EThe pedestrian light system should start in the PedestrianRed state.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022state\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EPedestrianRed\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-009\u0022 LONG-NAME=\u0022Requirement 9\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EThe pedestrian light should stay green for a duration equal to or greater than PedestrianWalkingTime seconds.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022state\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EPedestrianGreen\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022condition\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003E[t_seconds \u0026gt; PedestrianWalkingTime]\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-010\u0022 LONG-NAME=\u0022Requirement 10\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EAfter the green light duration, the light transitions to PedestrianFlickering.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022state\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EPedestrianFlickering\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022condition\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003ESetPedestrianLightFlickering()\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-011\u0022 LONG-NAME=\u0022Requirement 11\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EThe pedestrian light should flicker for a duration equal to or greater than PedestrianFlickeringTime seconds.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022state\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EPedestrianFlickering\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022condition\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003E[t_seconds \u0026gt; PedestrianFlickeringTime]\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-012\u0022 LONG-NAME=\u0022Requirement 12\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EAfter the flickering duration, the light transitions to PedestrianRed.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022state\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EPedestrianRed\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022condition\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003ESetPedestrianLightRed()\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-013\u0022 LONG-NAME=\u0022Requirement 13\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EThe pedestrian light should stay red while the traffic light is not in the TrafficRed state to ensure pedestrian safety.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022state\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EPedestrianRed\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-014\u0022 LONG-NAME=\u0022Requirement 14\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EThe traffic light and pedestrian light systems must be synchronized to ensure pedestrian safety.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-015\u0022 LONG-NAME=\u0022Requirement 15\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EThe pedestrian light should turn green only when the traffic light is red, ensuring no vehicles are crossing.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022state\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EPedestrianGreen\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022condition\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003ESetPedestrianLightGreen()\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-016\u0022 LONG-NAME=\u0022Requirement 16\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EThe system must maintain accurate timing based on t.Seconds for transitions between states.\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\t\u003CSPEC-OBJECT ID=\u0022REQ-017\u0022 LONG-NAME=\u0022Requirement 17\u0022\u003E\r\n\t\t\t\u003CVALUES\u003E\r\n\t\t\t\t\u003CATTRIBUTE-VALUE-STRING THE-ATTRIBUTE=\u0022description\u0022\u003E\r\n\t\t\t\t\t\u003CTHE-VALUE\u003EEach transition should be triggered once the corresponding time has passed (e.g., ClearIntersectionTime, PedestrianWalkingTime, etc.).\u003C/THE-VALUE\u003E\r\n\t\t\t\t\u003C/ATTRIBUTE-VALUE-STRING\u003E\r\n\t\t\t\u003C/VALUES\u003E\r\n\t\t\u003C/SPEC-OBJECT\u003E\r\n\t\u003C/SPEC-OBJECTS\u003E\r\n\u003C/REQ-IF\u003E\r\n\t\u003C/Input\u003E\r\n\r\n\t\u003COutput\u003E\r\nFeature: Enhanced Traffic Light and Pedestrian Light System\r\n\r\n  The system controls the traffic and pedestrian lights at an intersection, ensuring synchronization and safety.\r\n\r\n  Scenario: Traffic light system starts in TrafficRed state\r\n    Given the traffic light system starts\r\n    Then the traffic light should be in the TrafficRed state\r\n\r\n  Scenario: Pedestrian light system starts in PedestrianRed state\r\n    Given the pedestrian light system starts\r\n    Then the pedestrian light should be in the PedestrianRed state\r\n\r\n  Scenario Outline: Traffic light stays red for ClearIntersectionTime seconds\r\n    Given the traffic light is in the TrafficRed state\r\n    And the time since entering TrafficRed state is \u003CElapsedTime\u003E seconds\r\n    When time is evaluated\r\n    Then the traffic light should \u003CExpectedOutcome\u003E\r\n\r\n    Examples:\r\n      | ElapsedTime | ExpectedOutcome                 |\r\n      | 5           | remain in TrafficRed state      |\r\n      | 10          | remain in TrafficRed state      |\r\n      | 15          | transition to TrafficGreen state|\r\n\r\n  Scenario: Traffic light transitions to TrafficGreen after red duration\r\n    Given the traffic light is in the TrafficRed state\r\n    And the time since entering TrafficRed state is greater than ClearIntersectionTime\r\n    When SetTrafficLightGreen() is called\r\n    Then the traffic light should transition to TrafficGreen state\r\n\r\n  Scenario Outline: Traffic light stays green for LightGreenTime seconds\r\n    Given the traffic light is in the TrafficGreen state\r\n    And the time since entering TrafficGreen state is \u003CElapsedTime\u003E seconds\r\n    When time is evaluated\r\n    Then the traffic light should \u003CExpectedOutcome\u003E\r\n\r\n    Examples:\r\n      | ElapsedTime | ExpectedOutcome                  |\r\n      | 5           | remain in TrafficGreen state     |\r\n      | 20          | remain in TrafficGreen state     |\r\n      | 25          | transition to TrafficYellow state|\r\n\r\n  Scenario: Traffic light transitions to TrafficYellow after green duration\r\n    Given the traffic light is in the TrafficGreen state\r\n    And the time since entering TrafficGreen state is greater than LightGreenTime\r\n    When SetTrafficLightYellow() is called\r\n    Then the traffic light should transition to TrafficYellow state\r\n\r\n  Scenario Outline: Traffic light stays yellow for LightYellowTime seconds\r\n    Given the traffic light is in the TrafficYellow state\r\n    And the time since entering TrafficYellow state is \u003CElapsedTime\u003E seconds\r\n    When time is evaluated\r\n    Then the traffic light should \u003CExpectedOutcome\u003E\r\n\r\n    Examples:\r\n      | ElapsedTime | ExpectedOutcome                  |\r\n      | 2           | remain in TrafficYellow state    |\r\n      | 4           | remain in TrafficYellow state    |\r\n      | 6           | transition to TrafficRed state   |\r\n\r\n  Scenario: Traffic light transitions back to TrafficRed after yellow duration\r\n    Given the traffic light is in the TrafficYellow state\r\n    And the time since entering TrafficYellow state is greater than LightYellowTime\r\n    When time is evaluated\r\n    Then the traffic light should transition to TrafficRed state\r\n\r\n  Scenario: Pedestrian light system starts in PedestrianRed state\r\n    Given the pedestrian light system starts\r\n    Then the pedestrian light should be in the PedestrianRed state\r\n\r\n  Scenario: Pedestrian light turns green when traffic light is red\r\n    Given the traffic light is in TrafficRed state\r\n    When SetPedestrianLightGreen() is called\r\n    Then the pedestrian light should transition to PedestrianGreen state\r\n\r\n  Scenario Outline: Pedestrian light stays green for PedestrianWalkingTime seconds\r\n    Given the pedestrian light is in PedestrianGreen state\r\n    And the time since entering PedestrianGreen state is \u003CElapsedTime\u003E seconds\r\n    When time is evaluated\r\n    Then the pedestrian light should \u003CExpectedOutcome\u003E\r\n\r\n    Examples:\r\n      | ElapsedTime | ExpectedOutcome                       |\r\n      | 5           | remain in PedestrianGreen state       |\r\n      | 10          | remain in PedestrianGreen state       |\r\n      | 15          | transition to PedestrianFlickering state|\r\n\r\n  Scenario: Pedestrian light transitions to PedestrianFlickering after green duration\r\n    Given the pedestrian light is in PedestrianGreen state\r\n    And the time since entering PedestrianGreen state is greater than PedestrianWalkingTime\r\n    When SetPedestrianLightFlickering() is called\r\n    Then the pedestrian light should transition to PedestrianFlickering state\r\n\r\n  Scenario Outline: Pedestrian light flickers for PedestrianFlickeringTime seconds\r\n    Given the pedestrian light is in PedestrianFlickering state\r\n    And the time since entering PedestrianFlickering state is \u003CElapsedTime\u003E seconds\r\n    When time is evaluated\r\n    Then the pedestrian light should \u003CExpectedOutcome\u003E\r\n\r\n    Examples:\r\n      | ElapsedTime | ExpectedOutcome                        |\r\n      | 2           | remain in PedestrianFlickering state   |\r\n      | 4           | remain in PedestrianFlickering state   |\r\n      | 6           | transition to PedestrianRed state      |\r\n\r\n  Scenario: Pedestrian light transitions to PedestrianRed after flickering duration\r\n    Given the pedestrian light is in PedestrianFlickering state\r\n    And the time since entering PedestrianFlickering state is greater than PedestrianFlickeringTime\r\n    When SetPedestrianLightRed() is called\r\n    Then the pedestrian light should transition to PedestrianRed state\r\n\r\n  Scenario: Pedestrian light stays red while traffic light is not red\r\n    Given the traffic light is in \u003CTrafficLightState\u003E\r\n    When the pedestrian light state is evaluated\r\n    Then the pedestrian light should be in PedestrianRed state\r\n\r\n    Examples:\r\n      | TrafficLightState |\r\n      | TrafficGreen      |\r\n      | TrafficYellow     |\r\n\r\n  Scenario: Traffic and pedestrian lights are synchronized for safety\r\n    Given the traffic light is in \u003CTrafficLightState\u003E\r\n    When the pedestrian light state is evaluated\r\n    Then the pedestrian light should be in \u003CExpectedPedestrianState\u003E\r\n\r\n    Examples:\r\n      | TrafficLightState | ExpectedPedestrianState |\r\n      | TrafficRed        | PedestrianGreen         |\r\n      | TrafficGreen      | PedestrianRed           |\r\n      | TrafficYellow     | PedestrianRed           |\r\n\r\n  Scenario: System maintains accurate timing for state transitions\r\n    Given the system time is t.Seconds\r\n    When evaluating transitions\r\n    Then each transition occurs once the corresponding time has passed\r\n\r\n  Scenario: Each transition is triggered after the corresponding time has passed\r\n    Given a state with a duration of DurationTime seconds\r\n    And the time since entering the state is t_seconds\r\n    When t_seconds \u003E DurationTime\r\n    Then the system should trigger the next state\r\n\r\n\t\u003C/Output\u003E\r\n",
    "Interactions": [
      {
        "Message": "Consider the functional coverage from the list of requirement, its edge cases and negative scenario. If possible, add those scenarios."
      },
      {
        "Message": "Cross check the response you gave with the original set of requirements. If there is/are scenario that is not in the requirement list, separate it and comment it using '#' at the beginning of the line. Indicate at the beginning that the commented scenario(s) is a recommendation."
      },
      {
        "Message": "Ensure that the response you gave have valid JSON format with keys: \"FeatureFiles\" (Dictionary where the key is the SpecFlow feature file name). Make sure to output valid JSON, inside a string field you should only use single quotes, the double quotes are for begin/end of the field only. Make sure that the output can be read by JsonSerializer in C#. If the string contains tab, new line, or other invalid characters in JSON, use escape sequence."
      }
    ]
  }
}