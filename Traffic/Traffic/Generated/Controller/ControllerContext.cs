// ---------------------------------------------------------------------- 
// GENERATED FILE 
// All code in this file is generated by the SuperModels workbench 
// (version 5.0.0.1292). Any changes made to this file may lead to 
// incorrect behaviour and will be lost if the code is generated again. 
// Modify the model instead. 
// 
// Copyright : Sioux Technologies 
// Model     : Traffic.sms (Traffic) 
// Generator : C# state machine generator (Decomp1) 
// Source    : All state machines of Decomp1.Controller 
// ---------------------------------------------------------------------- 

// ReSharper disable IdentifierTypo
// ReSharper disable CheckNamespace
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable InconsistentNaming
// ReSharper disable RedundantUsingDirective
// ReSharper disable MemberCanBePrivate.Global
// ReSharper disable ClassWithVirtualMembersNeverInherited.Global
// ReSharper disable UseObjectOrCollectionInitializer
// ReSharper disable once ClassNeverInstantiated.Global

using System;
using InterfaceServices.Model;
using Traffic.Generated.Interfaces;
using HalFramework.Interfaces.Reference;
using HalFramework.Interfaces.Reference.Common;

namespace Traffic.Generated.Controller;

public partial class ControllerContext
{
    public Port<StartStop> I1 { get => GetProperty(ref _I1); set => _I1 = value; }
    public Port<NormallyClosedValveItf> CarGreen { get => GetProperty(ref _CarGreen); set => _CarGreen = value; }
    public Port<NormallyClosedValveItf> CarRed { get => GetProperty(ref _CarRed); set => _CarRed = value; }
    public Port<NormallyClosedValveItf> CarYellow { get => GetProperty(ref _CarYellow); set => _CarYellow = value; }
    public Port<NormallyClosedValveItf> PedGreen { get => GetProperty(ref _PedGreen); set => _PedGreen = value; }
    public Port<NormallyClosedValveItf> PedRed { get => GetProperty(ref _PedRed); set => _PedRed = value; }

    internal void __EFFECT_transition_it1_10()
    {
        /* Original Code
        PedRed.Open();
        CarRed.Open();
        */
        PedRed.Open();
        CarRed.Open();
    }

    internal void CarMayDrive()
    {
        /* Original Code
        CarGreen.Open();
        CarRed.Close();
        */
        CarGreen.Open();
        CarRed.Close();
    }

    internal void CarShouldBeStopped()
    {
        /* Original Code
        CarYellow.Open();
        CarGreen.Close();
        
        */
        CarYellow.Open();
        CarGreen.Close();
        
    }

    internal void CarsShouldBesStopped()
    {
        /* Original Code
        CarYellow.Close();
        CarRed.Open();
        */
        CarYellow.Close();
        CarRed.Open();
    }

    internal void Walk()
    {
        /* Original Code
        PedGreen.Open();
        PedRed.Close();
        */
        PedGreen.Open();
        PedRed.Close();
    }

    internal void __ENTRY_state_pedShouldStop_11()
    {
        /* Original Code
        PedGreen.Close();
        PedRed.Open();
        */
        PedGreen.Close();
        PedRed.Open();
    }

    internal void __ENTRY_state_greenOff_9()
    {
        /* Original Code
        PedGreen.Close();
        */
        PedGreen.Close();
    }

    internal void __ENTRY_state_greenOn_10()
    {
        /* Original Code
        PedGreen.Open();
        */
        PedGreen.Open();
    }

    internal bool __GUARD_transition_t4_4(TimeSpan t)
    {
        return t > T1;
    }

    internal bool __GUARD_transition_t5_5(TimeSpan t)
    {
        return t > T2;
    }

    internal bool __GUARD_transition_t6_6(TimeSpan t)
    {
        return t > T3;
    }

    internal bool __GUARD_transition_t7_7(TimeSpan t)
    {
        return t > T4;
    }

    internal bool __GUARD_transition_t8_8(TimeSpan t)
    {
        return t > T5;
    }

    internal bool __GUARD_transition_t10_1(TimeSpan t)
    {
        return t > T6;
    }

    internal bool __GUARD_transition_t11_2(TimeSpan t)
    {
        return t > T6;
    }

    #region internal

    private Port<StartStop>? _I1;
    private Port<NormallyClosedValveItf>? _CarGreen;
    private Port<NormallyClosedValveItf>? _CarRed;
    private Port<NormallyClosedValveItf>? _CarYellow;
    private Port<NormallyClosedValveItf>? _PedGreen;
    private Port<NormallyClosedValveItf>? _PedRed;
    private T GetProperty<T>(ref T? value) => 
        value ?? throw new InvalidOperationException($"Component with context {GetType()} is not yet built");

    #endregion
}
